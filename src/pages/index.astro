---
import Header from '../components/base/Header.astro';
import Marquee from '../components/Marquee.astro';
import Social from '../components/base/Social.astro';
import Github from '../icons/github.svg';
import Linkedin from '../icons/linkedin.svg';
import Mail from '../icons/mail.svg';
import Orcid from '../icons/orcid.svg';
import CalScheduleButton from '../components/CalScheduleButton.astro';
import '../styles/global.css';
import { getCollection } from 'astro:content';

// Build the same intro marquee links used in BaseLayout's Header
const [blogEntries, projectEntries, linkEntries] = await Promise.all([
  getCollection('blog'),
  getCollection('projects'),
  getCollection('links')
]);

const contentLinks = [
  ...blogEntries.map((entry) => ({ label: entry.data.title, url: `/blog/${entry.id}/` })),
  ...projectEntries.map((entry) => ({ label: entry.data.title, url: `/projects/${entry.slug}/` })),
  ...linkEntries.map((entry) => ({ label: entry.data.title, url: `/links/${entry.slug}/` }))
];

const navFallback = [
  { label: 'About', url: '/about' },
  { label: 'Projects', url: '/projects' },
  { label: 'Blog', url: '/blog' },
  { label: 'Tags', url: '/tags' },
  { label: 'Others', url: '/others' }
];

const seen = new Set<string>();
const uniqueCandidates = [...contentLinks, ...navFallback].filter((item) => {
  const key = `${item.label}|${item.url}`;
  if (seen.has(key)) return false;
  seen.add(key);
  return true;
});

const shuffle = <T,>(items: T[]) => {
  const copy = [...items];
  for (let i = copy.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [copy[i], copy[j]] = [copy[j], copy[i]];
  }
  return copy;
};

const marqueeItems = shuffle(uniqueCandidates).slice(0, Math.min(uniqueCandidates.length, 14));
const headerIntro = { name: 'Michele Vannucci' };
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
  <link rel="icon" type="image/svg+xml" href="/logo.svg" />
    <meta name="viewport" content="width=device-width" />
    <title>Michele Vannucci</title>
  </head>
  <body>
    <Header intro={headerIntro} />

    <main>
      <section class="contact-card" aria-labelledby="contacts-title">
        <h2 id="contacts-title">Contacts</h2>
        <div class="contact-row top">
          <Social platform="michele.vannucci20@gmail.com" url="mailto:michele.vannucci20@gmail.com" Icon={Mail} />
          <CalScheduleButton text="Schedule 30 min" link="michele-vannucci-ijafga/30min" ns="30min" />
        </div>

        <div class="contact-row socials" aria-label="Social profiles">
          <Social platform="Github" url="https://github.com/michelexyz" Icon={Github} />
          <Social platform="Linkedin" url="https://www.linkedin.com/in/michele-vannucci" Icon={Linkedin} />
          <Social platform="Orcid" url="https://orcid.org/0000-0002-8382-0360" Icon={Orcid} />
        </div>
      </section>
    </main>
    {marqueeItems.length > 0 && (
      <footer class="home-marquee">
        <Marquee items={marqueeItems} />
      </footer>
    )}
  </body>
</html>

<style>
  html, body { block-size: 100%; }
  body {
    min-block-size: 100svh; /* use small viewport on mobile to avoid toolbar jumps */
    display: flex;
    flex-direction: column;
    gap: clamp(var(--space-3), 4vh, var(--space-7));
  }

  main {
    display: grid;
    place-items: center;
    flex: 1 1 auto;  /* allow shrinking within flex container */
  }

  .contact-card {
    display: flex;
    flex-direction: column;
    gap: var(--space-4);
    width: 70%;
    max-width: 48rem;
    padding: var(--space-6);
    background: var(--card-bg);
    border: var(--border-2) dashed var(--border);
    border-radius: 20px; /* blocky */
    text-align: center;
  }

  .contact-card h2 {
    margin: 0;
    font-size: var(--font-6);
  }

  .contact-row {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-5);
    flex-wrap: wrap;
  }

  .socials .social { /* tighten spacing a bit */
    margin: 0.125rem 0;
  }

  @media (max-width: 600px) {
    .contact-card {
      padding: var(--space-6);
      inline-size: min(100%, 400px);
    }
  }


</style>

