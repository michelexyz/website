---
import DateText from '../../components/DateText.astro';

interface Props {
  url: string;
  title: string;
  pubDate?: Date | string;
  description?: string;
  coverSrc?: string; // optional image URL
}

const { url, title, pubDate, description, coverSrc } = Astro.props as Props;

// date formatting handled by DateText
---
<style>
  .card { margin: 0.5rem 0; border: 1px solid var(--border); border-radius: 0.5rem; background-color: var(--card-bg); transition: box-shadow 0.2s ease, transform 0.1s ease, border-color 0.2s ease; }
  .card:hover { box-shadow: 0 4px 10px rgba(0,0,0,0.15); transform: translateY(-2px); }
  .link { text-decoration: none; color: inherit; display: grid; grid-template-columns: 1fr; align-items: stretch; gap: 0; padding: 0; }
  .link.has-cover { grid-template-columns: 1fr 50%; }
  .content { display: block; padding: 1rem; }
  .title { margin: 0; font-size: 1.05rem; font-weight: 700; }
  .meta { color: var(--text-muted); font-size: 0.85rem; margin-top: 0.25rem; }
  .desc { color: var(--text); opacity: 0.85; margin-top: 0.35rem; margin-bottom: 0rem; }
  .cover { position: relative; z-index: 1; border-radius: 0.45rem; overflow: hidden; box-shadow: -4px 0 10px rgba(0,0,0,0.18); border-left: 1px solid var(--border); }
  .cover img { position: absolute; inset: 0; width: 100%; height: 100%; object-fit: cover; }
  @media (max-width: 520px) {
    .link.has-cover { grid-template-columns: 1fr 30%; }
  }
</style>

<li class="card">
  <a class={`link ${coverSrc ? 'has-cover' : ''}`} href={url}>
    <div class="content">
      <h3 class="title">{title}</h3>
      {(pubDate || description) && <div class="meta"><DateText value={pubDate} /></div>}
      {description && <p class="desc">{description}</p>}
    </div>
    {coverSrc && (
      <div class="cover" aria-hidden="true">
        <img src={coverSrc} alt="" />
      </div>
    )}
  </a>
</li>
