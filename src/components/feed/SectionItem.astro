---
interface Props {
  url: string;
  title: string;
  pubDate?: Date | string;
  description?: string;
}

const { url, title, pubDate, description } = Astro.props as Props;

function formatDate(d?: Date | string) {
  if (!d) return '';
  const dt = d instanceof Date ? d : new Date(d);
  if (Number.isNaN(dt.getTime())) return '';
  return dt.toLocaleDateString(undefined, { year: 'numeric', month: 'short', day: 'numeric' });
}
---
<style>
  .card { margin: 0.5rem 0; padding: 1rem; border: 1px solid var(--border); border-radius: 0.5rem; background-color: var(--card-bg); transition: box-shadow 0.2s ease, transform 0.1s ease, border-color 0.2s ease; }
  .card:hover { box-shadow: 0 4px 10px rgba(0,0,0,0.15); transform: translateY(-2px); }
  .link { text-decoration: none; color: inherit; display: block; }
  .title { margin: 0; font-size: 1.05rem; font-weight: 700; }
  .meta { color: var(--text-muted); font-size: 0.85rem; margin-top: 0.25rem; }
  .desc { color: var(--text); opacity: 0.85; margin-top: 0.35rem; }
</style>

<li class="card">
  <a class="link" href={url}>
    <h3 class="title">{title}</h3>
    {(pubDate || description) && <div class="meta">{formatDate(pubDate)}</div>}
    {description && <p class="desc">{description}</p>}
  </a>
  
</li>
